---
# .fo.yaml - Configuration for fo utility

# Global settings
stream: false # Default to capture mode
show_output: "on-fail" # Only show output on failure
max_buffer_size: 10485760 # 10MB buffer limit
max_line_length: 1048576 # 1MB max line length
no_timer: false # Show execution time
no_color: false # Use colors
ci: false # Not CI mode
debug: false # Disable debug output in production

# Global style settings
style:
  use_inline_progress: true # Enable inline progress indicator
  no_spinner: false # Enable spinner animation
  spinner_interval: 80 # Milliseconds between spinner updates

# Active theme selection
active_theme: "unicode_vibrant"

# Theme definitions
themes:
  unicode_vibrant:
    style:
      use_boxes: true
      indentation: "  "
      show_timestamps: false
      no_timer: false
      density: "balanced"
      use_inline_progress: true

    # Icons
    icons:
      start: "▶️"
      success: "✅"
      warning: "⚠️"
      error: "❌"
      info: "ℹ️"
      bullet: "•"

    # Colors
    colors:
      process: "\033[0;34m" # Blue
      success: "\033[0;32m" # Green
      warning: "\033[0;33m" # Yellow
      error: "\033[0;31m" # Red
      detail: "\033[0m" # Default
      muted: "\033[2m" # Dim
      reset: "\033[0m" # Reset

    # Border characters
    border:
      task_style: "left_double"
      header_char: "═"
      vertical_char: "│"
      top_corner_char: "╒"
      bottom_corner_char: "└"
      footer_continuation_char: "─"

    # Element styles
    elements:
      Task_Label_Header:
        text_case: "upper"
        text_style: ["bold"]
        color_fg: "process"

      Task_StartIndicator_Line:
        icon_key: "start"
        color_fg: "process"

      Task_Status_Success_Block:
        icon_key: "success"
        text_content: "Complete"
        color_fg: "success"

      Task_Status_Failed_Block:
        icon_key: "error"
        text_content: "Failed"
        color_fg: "error"

      Task_Status_Warning_Block:
        icon_key: "warning"
        text_content: "Completed with warnings"
        color_fg: "warning"

      Task_Status_Duration:
        prefix: "("
        suffix: ")"
        color_fg: "muted"

      Task_Progress_Line:
        additional_chars: "⠋⠙⠹⠸⠼⠴⠦⠧⠇⠏" # Braille spinner sequence

      # Output line styling
      Stdout_Line_Prefix:
        additional_chars: "  "

      Stderr_Warning_Line_Prefix:
        icon_key: "warning"
        additional_chars: "  "
        color_fg: "warning"

      Stderr_Error_Line_Prefix:
        icon_key: "error"
        additional_chars: "  "
        color_fg: "error"

      Task_Content_Summary_Heading:
        text_content: "SUMMARY:"
        text_style: ["bold"]
        color_fg: "process"

      Task_Content_Summary_Item_Error:
        bullet_char: "•"
        color_fg: "error"

      Task_Content_Summary_Item_Warning:
        bullet_char: "•"
        color_fg: "warning"

  # ASCII minimal theme for CI environments
  ascii_minimal:
    style:
      use_boxes: false
      indentation: "  "
      show_timestamps: false
      no_timer: false
      density: "compact"
      use_inline_progress: true

    # ASCII-only icons
    icons:
      start: "[START]"
      success: "[SUCCESS]"
      warning: "[WARNING]"
      error: "[FAILED]"
      info: "[INFO]"
      bullet: "*"

    # No colors (monochrome)
    colors:
      process: ""
      success: ""
      warning: ""
      error: ""
      detail: ""
      muted: ""
      reset: ""

    # Element styles for plain text
    elements:
      Task_Status_Success_Block:
        text_content: "SUCCESS"

      Task_Status_Failed_Block:
        text_content: "FAILED"

      Task_Status_Warning_Block:
        text_content: "WARNING"

      Task_Status_Duration:
        prefix: "("
        suffix: ")"

      Task_Progress_Line:
        additional_chars: "-\\|/" # Simple ASCII spinner

# Command presets
presets:
  go:
    label: "Go Build"
    intent: "building"

  "go test":
    label: "Testing"
    intent: "testing"

  golangci-lint:
    label: "Linting"
    intent: "linting"

  yamllint:
    label: "YAML Linting"
    intent: "linting"
