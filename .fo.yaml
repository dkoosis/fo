---
# .fo.yaml - Configuration for fo utility

# Global settings
stream: false  # Default to capture mode
show_output: "on-fail"  # Only show output on failure
max_buffer_size: 10485760  # 10MB buffer limit
max_line_length: 1048576  # 1MB max line length
no_timer: false  # Show execution time
no_color: false  # Use colors
ci: false  # Not CI mode
debug: false  # Set via CLI flag usually

# Global style settings
style:
  use_inline_progress: true  # Enable inline progress indicator
  no_spinner: false  # Enable spinner animation
  spinner_interval: 80  # Milliseconds between spinner updates

# Active theme selection
active_theme: "unicode_vibrant"

# Theme definitions
themes:
  unicode_vibrant:
    style:
      use_boxes: true
      indentation: "  "
      show_timestamps: false
      no_timer: false
      density: "balanced"
      use_inline_progress: true  # This enables spinner logic in Go code

    # Icons
    icons:
      start: "▶️"
      success: "✅"
      warning: "⚠️"
      error: "❌"
      info: "ℹ️"
      bullet: "•"

    # Colors - These are the raw ANSI codes your Go code will process
    colors:
      Process: "\033[0;97m"  # White (used by default for some headers if not overridden by element)
      Success: "\033[0;32m"  # Green
      Warning: "\033[0;33m"  # Yellow
      Error: "\033[0;31m"  # Red
      Detail: "\033[0m"  # Default/Reset (usually no color)
      Muted: "\033[2m"  # Dim
      Reset: "\033[0m"  # ANSI Reset

      # Specific colors for precise control via element styles
      White: "\033[0;97m"  # Bright White foreground
      BlueBg: "\033[44m"  # Blue Background
      Bold: "\033[1m"
      Italic: "\033[3m"

    # Border characters (primarily for non-inline progress Task rendering)
    border:
      task_style: "left_double"
      header_char: "═"
      vertical_char: "│"
      top_corner_char: "╒"
      bottom_corner_char: "└"
      footer_continuation_char: "─"

    # Element styles
    elements:
      # Heading hierarchy
      H1:  # Main section headers (blue background)
        color_fg: "White"
        color_bg: "BlueBg"
        text_style: ["bold"]
        icon_key: "Start"

      H2:  # Subsection headers
        color_fg: "Process"
        text_style: ["bold"]
        icon_key: "Info"

      H3:  # Minor headers
        color_fg: "Process"
        text_style: []
        icon_key: "Bullet"

      # Status messages
      Success:
        color_fg: "Success"
        icon_key: "Success"

      Warning:
        color_fg: "Warning"
        icon_key: "Warning"

      Error:
        color_fg: "Error"
        icon_key: "Error"

      Info:
        color_fg: "Process"
        icon_key: "Info"

      # Maintain existing task-related styles
      Task_Label_Header:
        text_case: "upper"
        text_style: ["bold"]
        color_fg: "Process"

      Task_StartIndicator_Line:
        icon_key: "Start"
        color_fg: "Process"

      Task_Status_Success_Block:
        icon_key: "Success"
        text_content: "Complete"
        color_fg: "Success"

      Task_Status_Failed_Block:
        icon_key: "Error"
        text_content: "Failed"
        color_fg: "Error"

      Task_Status_Warning_Block:
        icon_key: "Warning"
        text_content: "Completed with warnings"
        color_fg: "Warning"

      Task_Status_Duration:
        prefix: "("
        suffix: ")"
        color_fg: "Muted"

      Task_Progress_Line:
        additional_chars: "-\\|/"

      Stdout_Line_Prefix:
        additional_chars: "  "
      Stderr_Warning_Line_Prefix:
        icon_key: "Warning"
        additional_chars: "  "
        color_fg: "Warning"
      Stderr_Error_Line_Prefix:
        icon_key: "Error"
        additional_chars: "  "
        color_fg: "Error"
      Task_Content_Stderr_Warning_Text:
        color_fg: "Warning"
      Task_Content_Stderr_Error_Text:
        color_fg: "Error"

      Task_Content_Summary_Heading:
        text_content: "SUMMARY:"
        text_style: ["bold"]
        color_fg: "Process"
      Task_Content_Summary_Item_Error:
        bullet_char: "•"
        color_fg: "Error"
      Task_Content_Summary_Item_Warning:
        bullet_char: "•"
        color_fg: "Warning"

  # ASCII minimal theme for CI environments
  ascii_minimal:
    style:
      use_boxes: false
      indentation: "  "
      show_timestamps: false
      no_timer: false
      density: "compact"
      use_inline_progress: true

    icons:
      start: "[START]"
      success: "[SUCCESS]"
      warning: "[WARNING]"
      error: "[FAILED]"
      info: "[INFO]"
      bullet: "*"

    colors: {}  # Empty, IsMonochrome flag in Go code will prevent color lookups

    elements:
      H1:
        text_style: ["bold"]
        icon_key: "Start"
      H2:
        text_style: ["bold"]
        icon_key: "Info"
      H3:
        icon_key: "Bullet"
      Success:
        icon_key: "Success"
      Warning:
        icon_key: "Warning"
      Error:
        icon_key: "Error"
      Info:
        icon_key: "Info"

      Task_Status_Success_Block: {text_content: "SUCCESS"}
      Task_Status_Failed_Block: {text_content: "FAILED"}
      Task_Status_Warning_Block: {text_content: "WARNING"}
      Task_Status_Duration: {prefix: "(", suffix: ")"}
      Task_Progress_Line: {additional_chars: "-\\|/"}

# Command presets
presets:
  go:
    label: "Go Task"
    intent: "building"

  "go build":
    label: "Go Build"
    intent: "building"

  "go test":
    label: "Testing"
    intent: "testing"

  golangci-lint:
    label: "Linting"
    intent: "linting"

  yamllint:
    label: "YAML Linting"
    intent: "linting"
